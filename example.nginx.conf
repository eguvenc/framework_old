
# Replace the example.com with your domain or local hostname.

server {
        listen       80;
        server_name  example.com www.example.com;

        #charset utf-8;

        access_log  /var/www/example.com/log/host.access.log  main;
        error_log   /var/www/example.com/log/host.error.log;

        root   /var/www/example.com/public;
        index  index.php index.html index.htm;

        # may want to specify some additional configuration for static files
        #location ~ \.(js|css|png|gif|jpg|ico|jpeg|woff|ttf|eot|ogg|mp3)
        #{
        #     expires 30d;
        #}

        # START THE FRAMEWORK REWRITE RULES
        # ( URI_PROTOCOL should be REQUEST_URI OR AUTO / app /config / uri_protocol = REQUEST_URI )

        # enforce NO www
        if ($host ~* ^www\.(.*))
        {
                set $host_without_www $1;
                rewrite ^/(.*)$ $scheme://$host_without_www/$1 permanent;
        }

        # canonicalize url end points
        # if your default controller is something other than "welcome" you should change the following
        if ($request_uri ~* ^(/welcome(/index)?|/index(.php)?)/?$)
        {
                rewrite ^(.*)$ / permanent;
        }

        # removes trailing "index" from all controllers
        if ($request_uri ~* index/?$)
        {
                rewrite ^/(.*)/index/?$ /$1 permanent;
        }

        # removes trailing slashes (prevents SEO duplicate content issues)
        if (!-d $request_filename)
        {
                rewrite ^/(.+)/$ /$1 permanent;
        }

        # removes access to "obullo" folder
        if ($request_uri ~* ^/obullo)
        {
                rewrite ^/(.*)$ /index.php?/$1 last;
                break;
        }

        # unless the request is for a valid file (image, js, css, etc.), send to bootstrap
        if (!-e $request_filename)
        {
                rewrite ^/(.*)$ /index.php?/$1 last;
                break;
        }

        # END FRAMEWORK REWRITE RULES

        # error_page  404              /404.html;
        # location = /404.html {
        #   root   /usr/share/nginx/html;
        # }

        # redirect server error pages to the static page /50x.html
        #
        # error_page   500 502 503 504  /50x.html;
        # location = /50x.html {
        #    root   /usr/share/nginx/html;
        # }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000

        location ~ \.php$ {
            fastcgi_pass   127.0.0.1:9000;
            fastcgi_index  index.php;
            fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include        fastcgi_params;
        }

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        location ~ /\.ht {
            deny  all;
        }

        # deny access to .sh files
        #
        location ~ /\.sh {
            deny  all;
        }
    }